<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4XWc6wv5xf8B3T1c3YgxfVkAAAAASUVORK5CYII=
</value>
  </data>
</root>